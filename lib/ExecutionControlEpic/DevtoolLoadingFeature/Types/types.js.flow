"use babel";
// @flow

import type {
  ConfigSchemaPart,
  PlanConfig,
} from "../../PlanConfigurationFeature/Types/types";
import type {
  Controller,
  Strategy,
} from "../../TaskExecutionFeature/Types/types";
import type { PackageTester } from "../../../ProjectSystemEpic/PackageFeature/Types/types";
import type { HelperAPI } from "../../TaskExecutionFeature/Model/HelperAPI";
import type { DevTool } from "../../DevToolsSummaryFeature/Types/types";
import type { DiagnosticMode } from "../../DiagnosticsFeature/Types/types";

export type GetStrategyForPlanResult = {
  strategy: Strategy,
  controller: Controller,
};

export type GetStrategyForPlan = (
  plan: PlanConfig,
  helperAPI: HelperAPI,
) => GetStrategyForPlanResult;

export type PluginInfo = {
  name: string,
  iconUri: string,
  dominantColor?: string,
  defaultDiagnosticsMode?: DiagnosticMode,
};

export type Plugin = {
  info: PluginInfo,
  configSchema: ConfigSchemaPart,
  getStrategyForPlan: GetStrategyForPlan,
  DiagnosticView?: any,
  isPackage?: PackageTester,
};

export type ProvidedDevTool = Plugin & {
  info: DevTool,
};
